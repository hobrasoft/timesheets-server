<!-- #include '/inc/header.html' -->
<!-- #include '/inc/navbar.html' -->

<form>
<input type="hidden" id="category"></input>

<table class="table table-bordered">

<tr><td><label class="form-label">Parent category</label></td>
    <td><select id="parent_category" class="form-select"></select></td>
    </tr>

<tr><td><label for="description" class="form-label">Description</label></td>
    <td><input type="text" id="description"></input></td>
    </tr>

<tr><td><label for="price" class="form-label">Price</label></td>
    <td><input type="number" id="price" value=0></input></td>
    </tr>

<tr><td><label class="form-label">Users</label></td>
    <td>
        <div id="template-user" style="display: none;">
            <input type="checkbox" class="user-category-checkbox form-check-input">
            <label class="user-category-label form-check-label"></label>
        </div>
        <div id="user-category">
        </div>
    </td>
    </tr>

</table>

<button type="button" class="btn btn-secondary" id="btn-cancel">Cancel</button>
<button type="button" class="btn btn-primary" id="btn-save">Save</button>
<button type="button" class="btn btn-danger" id="btn-del" data-bs-toggle="modal" data-bs-target="#confirm-delete">Delete</button>
</form>

<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3>This will delete the category.</h2>
            </div>
            <div class="modal-body">
                <p>Do you really want to delete the category?</p>
                <p>This will delete the category and all its subcategories and tasks!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="btn-delete" class="btn btn-danger btn-ok">Delete</button>
            </div>
        </div>
    </div>
</div>


<script>
function goBack() {
    window.location.replace('index.shtml');
}


function createListOfUsers(users) {
    // Create list of permitted users
    var uapi = new Api();
    uapi.onFinished = function(uresult) {
        for (var i=0; i<uresult.length; i++) {
            var x = $('#template-user').clone();
            var id_user_checkbox = x.find(".user-category-checkbox");
            var id_user_label    = x.find(".user-category-label");
            $(id_user_checkbox).attr('class', 'user-category-data form-check-input');
            $(id_user_checkbox).attr('id', 'user-'+uresult[i].user);
            $(id_user_checkbox).attr("checked", users.includes(uresult[i].user));
            $(id_user_label).attr('for', 'user-'+uresult[i].user);
            $(id_user_label).html(uresult[i].name);
            $("#user-category").append(x);
            $(x).show();
            }
        };
    uapi.users();
}

function createParentCategoriesSelection(category, parent_category) {
    // Fill and set the category selection 
    // console.log("createParentCategoriesSelection " + category);
    var apic = new Api();
    apic.onFinished = function(resultc) {
        var resultcs = resultc.toSorted(function(a,b) { return (a.description_tree > b.description_tree) ? 1 : (a.description_tree < b.description_tree) ? -1 : 0; } );
        for (var i=0; i<resultcs.length; i++) {
            var selected = (resultcs[i].category == parent_category) ? selected='selected="selected"' : '';
            $("#parent_category").append('<option value="'+resultcs[i].category+'" '+selected+'>'+resultcs[i].description_tree+'</option>');
            }
        }
    apic.categoriessiblings(category);
}

$(document).ready(function(){
    var category = parseInt($.urlParam("category"));
    var parentCategory = sessionStorage.getItem("currentCategory");

    if (category == 0 || isNaN(category)) {
        $("#btn-del").hide();
        }

    if ((category == 0 || isNaN(category)) && parentCategory > 0) {
        var api = new Api();
        api.onFinished = function(result) {
            $("#parent_category").val(parentCategory);
            $("#parent-description").text(result.description);
            $("#price").val(result.price);
            };
        api.category(parentCategory);
        var userid = userId();
        var users = [];
        users.push(userid);
        createListOfUsers(users);
        createParentCategoriesSelection(null, parentCategory);
        }

    if (category > 0) {
        var api = new Api();
        api.onFinished = function(result) {
            $("#category").val(result.category);
            $("#description").val(result.description);
            $("#price").val(result.price);
            createListOfUsers(result.users.map(function(x) { return parseInt(x); }));
            createParentCategoriesSelection(category, result.parent_category);
            };
        api.category(category);
        }

    $("#btn-cancel").click(function(event){
        goBack();
        });

    $("#btn-save").click(function(event){
        var users = [];
        $(".user-category-data").each(function() {
            var id = $(this).attr('id');
            var user = id.replace("user-","");
            var checked  = $(this).prop("checked");
            if (checked === false) { return; }
            users.push(user);
            });

        var category = $("#category").val();
        var parent_category = $("#parent_category").val();
        var description = $("#description").val();
        var price = $("#price").val();
        var data = {category: category, parent_category: parent_category, description: description, price: price, users: users};
        var api = new Api();
        api.onFinished = function() { goBack(); }
        api.saveCategory(data);
        });

    $("#btn-delete").click(function(event){
        var category = $("#category").val();
        api.onFinished = function() { goBack(); }
        api.removeCategory(category);
        });

    });
</script>

<!-- #include '/inc/footer.html' -->
