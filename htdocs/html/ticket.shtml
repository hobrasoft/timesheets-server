<!-- #include '/inc/header.html' -->
<!-- #include '/inc/navbar.html' -->

<div id="spinner" class="spinner-border screen-spinner" style="width: 3em; height: 3em;" role="status"></div>

<div class="container">
    <form>
    <input type="hidden" id="ticket"></input>
    <input type="hidden" id="user"></input>

    <table class="table table-bordered">

    <tr><td><label for="date">Date and time</label></td>
        <td><input type="text" id="date" class="form-control" disabled></input></td>
        </tr>

    <tr><td><label for="owner-name">Ticket's owner name</label></td>
        <td><input type="text" id="owner-name" class="form-control" disabled></input></td>
        </tr>

    <tr><td><label for="description">Description</label></td>
        <td><input type="text" id="description"class="form-control" ></input></td>
        </tr>

    <tr><td><label for="price">Price</label></td>
        <td><input type="number" id="price" class="form-control" value=0></input></td>
        </tr>

    <tr><td><label for="category">Category</label></td>
        <td><select id="category" class="form-select"></select></td>
        </tr>

    </table>

    <h4>Spent time & price</h4>
    <table class="table table-bordered">
    <thead>
    <tr>
        <th></th>
        <th>From</th>
        <th>To</th>
        <th>Time</th>
        <th>Price</th>
        <th>User name</th>
    </tr>
    </thead>
    <tbody id="timesheet-tbody">
    <tr id="template-timesheet" style="display: none;">
        <td><button type="button" class="btn btn-primary-outline btn-edit-timesheet"><i class="bi bi-pencil"></i></button></td>
        <td class="timesheet-from"></td>
        <td class="timesheet-to"></td>
        <td class="timesheet-time"></td>
        <td class="timesheet-price"></td>
        <td class="timesheet-user-name"></td>
    </tr>
    </tbody>
    </table>

    <h4>Status
        <button type="button" class="btn btn-primary-outline" id="btn-add-status" data-bs-toggle="modal" data-bs-target="#add-new-status-dialog"><i class="bi bi-plus-circle"></i></button>
        </h4>
    <table class="table table-bordered">
    <thead>
    <tr>
        <th></th>
        <th>Date &amp; time</th>
        <th>Status</th>
        <th>Description</th>
        <th>Text</th>
        <th>User name</th>
    </tr>
    </thead>
    <tbody id="status-tbody">
    <tr id="template-status" style="display: none;">
        <td><button type="button" class="btn btn-primary-outline btn-remove-style" style="display: none;"><i class="bi bi-trash"></i></button></td>
        <td><span class="status-date"        href=""></span></td>
        <td><span class="status-status"      href=""></span></td>
        <td><span class="status-status-description" href=""></span></td>
        <td><span class="status-description" href=""></span></td>
        <td><span class="status-user-name"></span></td>
    </tr>
    </tbody>
    </table>


    <button type="button" class="btn btn-secondary" id="btn-cancel">Cancel</button>
    <button type="button" class="btn btn-primary" id="btn-save">Save</button>
    <button type="button" class="btn btn-danger" id="btn-del" data-bs-toggle="modal" data-bs-target="#confirm-delete">Delete</button>
    </form>
</div> <!-- container -->

<!-- Delete dialog -->
<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3>This will delete the ticket</h3>
            </div>
            <div class="modal-body">
                <p>Do you really want to delete the ticket?</p>
                <p>There is no way back!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="btn-delete" class="btn btn-danger btn-ok">Delete</button>
            </div>
        </div>
    </div>
</div>


<!-- Add new status dialog -->
<div class="modal fade" id="add-new-status-dialog" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Append new status</h3>
            </div>
            <div class="modal-body">
                <label for="next-status-text" class="form-label">Description</label>
                <input type="text" id="next-status-text" class="form-control"></input>
                <label for="next-status-id" class="form-label">Status</label>
                <select class="form-select" id="next-status-id"></select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="add-new-status-btn-add" class="btn btn-danger btn-ok">Add</button>
            </div>
        </div>
    </div>
</div>


<!-- Edit one timesheet record dialog -->
<div class="modal fade" id="edit-timesheet" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Change the timesheet record</h3>
            </div>
            <div class="modal-body">
                <label for="edit-timesheet-from" class="form-label">From</label>
                <input type="datetime-local" id="edit-timesheet-from" class="form-control"></input>
                <label for="edit-timesheet-to" class="form-label">To</label>
                <input type="datetime-local" id="edit-timesheet-to" class="form-control"></select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="edit-timesheet-btn-ok" class="btn btn-danger btn-ok">OK</button>
            </div>
        </div>
    </div>
</div>


<script>
function goBack() {
    var category = sessionStorage.getItem("currentCategory");
    window.location.replace('index.shtml?category='+category);
}


function findOwnersName() {
    var user = $("#user").val();
    var users = JSON.parse(sessionStorage.getItem("usersList"));
    $("#owner-name").val(users[user]);
}


function fillCategorySelection(category) {
    var apic = new Api();
    $("#category").append('<option value="null">Choose category</option>');
    apic.onFinished = function(resultc) {
        for (var i=0; i<resultc.length; i++) {
            var selected = (resultc[i].category == category) ? selected='selected="selected"' : '';
            $("#category").append('<option value="'+resultc[i].category+'" '+selected+'>'+resultc[i].description_tree+'</option>');
            }
        }
    apic.categories();
}


function fillTimesheetsTableRow(x, timesheet) {
    var users = JSON.parse(sessionStorage.getItem("usersList"));
    var user_name = users[timesheet.user];
    var price = $("#price").val();
    var id_timesheet_date_from  = x.find(".timesheet-from");
    var id_timesheet_date_to    = x.find(".timesheet-to");
    var id_timesheet_time       = x.find(".timesheet-time");
    var id_timesheet_price      = x.find(".timesheet-price");
    var id_timesheet_user_name  = x.find(".timesheet-user-name");
    var interval = timesheet.date_from.secsTo(timesheet.date_to);
    var price = Math.round(price * interval / 3600);
    $(id_timesheet_date_from).prop('data-id', timesheet.id);
    $(id_timesheet_date_from).prop('data-user', timesheet.user);
    $(id_timesheet_date_from).prop('data', timesheet.date_from);
    $(id_timesheet_date_from).html(timesheet.date_from.formatYYYYMMDDHHMM());
    $(id_timesheet_date_to).html(timesheet.date_to.formatYYYYMMDDHHMM());
    $(id_timesheet_date_to).prop('data',timesheet.date_to);
    console.log('interval: ' + interval);
    $(id_timesheet_time).html(interval !== '' ? interval.formatHHMM() : '');
    $(id_timesheet_price).html(price);
    $(id_timesheet_user_name).html(user_name);
    $(x).prop('class', 'tr-timesheet');
}


function fillTimesheetsTable(ptimesheets) {
    // Fill the timesheets table
    var timesheets = ptimesheets.sort(function(a,b){return (a.date_from>b.date_to)?1:(a.date<b.date)?-1:0;})
    for (var i=0; i<timesheets.length; i++) {
        var x = $("#template-timesheet").clone();
        fillTimesheetsTableRow(x, timesheets[i]);
        $("#timesheet-tbody").append(x);
        $(x).show();

        // When edit button is clicked, then show dialog with date-from and date-to values
        var clickedLineElement = null;
        $(".btn-edit-timesheet").click(function(event){
            // find the TR line of clicked button
            clickedLineElement = $(event.target);
            do {
                clickedLineElement = clickedLineElement.parent();
                } while (clickedLineElement[0].tagName != 'TR' && typeof clickedLineElement[0].tagName != 'undefined');
            var id_date_from_val = clickedLineElement.find(".timesheet-from").prop('data');
            var id_date_to_val   = clickedLineElement.find(".timesheet-to").prop('data');
            $("#edit-timesheet-from").val(id_date_from_val);
            $("#edit-timesheet-to").val(id_date_to_val);
            $("#edit-timesheet").modal("show");
            });

        // When the dialog with date-from and date-to is closed, propagate values to table
        $("#edit-timesheet-btn-ok").click(function(event){
            var date_from = $("#edit-timesheet-from").val();
            var date_to   = $("#edit-timesheet-to").val();
            fillTimesheetsTableRow(clickedLineElement, {date_from: date_from, date_to: date_to});
            $("#edit-timesheet").modal("hide");
            });
        }
}


function timesheetsListFromTable() {
    var list = [];
    $(".tr-timesheet").each(function() {
        var ticket      = $("#ticket").val();
        var id          = $(this).find(".timesheet-from").prop("data-id");
        var user        = $(this).find(".timesheet-from").prop("data-user");
        var date_from   = $(this).find(".timesheet-from").html();
        var date_to     = $(this).find(".timesheet-to").prop("data");
        list.push({
            id: id,
            ticket: ticket,
            date_from: date_from,
            date_to: date_to,
            user: user
            });
        });
    return list;
}


function fillStatusesTableAdd(status) {
    var users = JSON.parse(sessionStorage.getItem("usersList"));
    var user_name = users[status.user];
    var x = $("#template-status").clone();
    var id_status_date               = x.find(".status-date");
    var id_status_remove             = x.find(".btn-remove-style");
    var id_status_status             = x.find(".status-status");
    var id_status_description        = x.find(".status-description");
    var id_status_status_description = x.find(".status-status-description");
    var id_status_user_name          = x.find(".status-user-name");

    $(id_status_date).prop('data', status.date);
    $(id_status_date).html(status.date.formatYYYYMMDDHHMM());
    $(id_status_status).html(status.status);
    $(id_status_status).prop('data-user', status.user);
    $(id_status_description).html(status.description);
    $(id_status_status_description).html(status.status_description);
    $(id_status_user_name).html(user_name);
    $(x).prop('class', 'tr-status');
    if (status.created) { 
        $(id_status_remove).show(); 
        $(id_status_remove).click(function(event) {
            $(x).remove();
            });
        }

    $("#status-tbody").append(x);
    $(x).show();
}


function fillStatusesTable(pstatuses) {
    if (pstatuses != null) {
        var statuses = pstatuses.sort(function(a,b){return (a.date>b.date)?1:(a.date<b.date)?-1:0;})
        for (var i=0; i<statuses.length; i++) {
            fillStatusesTableAdd(statuses[i]);
            }
        }

    // Dialog "Add new status"
    $("#add-new-status-btn-add").click(function(event){
        console.log("Clicked add-new-status-btn-add");
        var now = new Date();
        var date = now.toISOString();
        var user = userId();
        var status = $("#next-status-id").val();
        var description = $("#next-status-text").val();
        var status_description = $('.next-status-option[value="'+status+'"').html();
        fillStatusesTableAdd({
            date: date,
            user: user,
            status: status,
            created: true,
            description: description,
            status_description: status_description
            });
        $("#add-new-status-dialog").modal("hide");
        });
}


// Fill the "next status" table in "add new status" dialog
function fillNextStatusDialog(statuses) {
    var category = $("#category").val();
    var last_status = (statuses != null) ? statuses
            .sort(function(a,b){return (a.date>b.date)?1:(a.date<b.date)?-1:0;})
            .filter(function(x){return !x.status_ignored;})
            .pop()
        : null;
    var last_status_list = new Array;
    last_status_list.push((last_status != null) ? last_status.status : null);
    var apins = new Api();
    apins.onFinished = function(resultns) {
        for (var i=0; i<resultns.length; i++) {
            $("#next-status-id").append('<option value="'+resultns[i].status+'" class="next-status-option">'+resultns[i].description+'</option>');
            }
        } 
    apins.statuses(category, last_status_list);
}


function statusesListFromTable() {
    var list = [];
    $(".tr-status").each(function() {
        var status      = $(this).find(".status-status").html();
        var date        = $(this).find(".status-date").prop("data");
        var user        = $(this).find(".status-status").prop("data-user");
        var description = $(this).find(".status-description").html();
        list.push({
            status: status,
            date: date,
            user: user,
            description: description
            });
        });
    return list;
}



$(document).ready(function(){
    var ticket = parseInt($.urlParam("ticket"));

    $("#category").on('change', function(event) {
        var category = $("#category").val();
        $("#btn-save").prop('disabled', !(category > 0));
        });

    var apiu = new Api();
    apiu.onFinished = function(resultu) {
        var users = {};
        for (var i=0; i<resultu.length; i++) {
            users[resultu[i].user] = resultu[i].name;
            }
        sessionStorage.setItem("usersList", JSON.stringify(users));

        if (ticket == 0 || isNaN(ticket)) {
            $("#btn-del").hide();
            // $("#btn-save").prop('disabled', true);
            var api = new Api();
            var category = sessionStorage.getItem("currentCategory");
            api.onFinished = function(result) {
                var now = new Date();
                $("#date").val(now.formatYYYYMMDDHHMM());
                $("#date").prop('data', now);
                $("#price").val(result.price);
                $("#user").val(userId());

                findOwnersName();
                fillCategorySelection(category);
                fillNextStatusDialog(null);
                fillStatusesTable(null);
                $("#spinner").hide();
                };
            api.categories(category);
            }

        if (ticket > 0) {
            var api = new Api();
            api.onFinished = function(result) {
                $("#ticket").val(result.ticket);
                $("#description").val(result.description);
                $("#date").val(result.date.formatYYYYMMDDHHMM());
                $("#date").prop('data', result.date);
                $("#price").val(result.price);
                $("#user").val(result.user);

                findOwnersName();
                fillCategorySelection(result.category);
                fillTimesheetsTable(result.timesheets);
                fillStatusesTable(result.statuses);
                fillNextStatusDialog(result.statuses);
                $("#spinner").hide();
                };
            api.ticketvw(ticket);
            }
        };
    apiu.users();

    $("#btn-cancel").click(function(event){
        goBack();
        });

    $("#btn-delete").click(function(event){
        goBack();
        var ticket = $("#ticket").val();
        var api = new Api();
        api.onFinished = function() { goBack(); }
        api.removeTicket(ticket);
        });

    $("#btn-save").click(function(event){
        $("#spinner").show();
        var ticket = $("#ticket").val();
        var created = (ticket <= 0);
        var user = $("#user").val();
        var date = $("#date").prop("data");
        var category = $("#category").val();
        var price = $("#price").val();
        var description = $("#description").val(); var price = $("#price").val();
        var statuses = statusesListFromTable();
        var timesheets = timesheetsListFromTable();

        var data = {
            modified: true, 
            created: created,
            ticket: ticket, 
            user: user, 
            date: date, 
            category: category, 
            price: price, 
            description: description, 
            statuses: statuses,
            timesheets: timesheets
            };

        console.log(JSON.stringify(data));

        var api = new Api();
        api.onFinished = function() { goBack(); }
        api.saveTicket(data);

        // goBack();
        });

    });
</script>

<!-- #include '/inc/footer.html' -->
